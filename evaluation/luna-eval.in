#!/usr/bin/perl -w

# This file is part of the Lightweight Universal Network Analyzer (LUNA)
#
# Copyright (c) 2013 Fiona Klute
#
# LUNA is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# LUNA is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License
# along with LUNA. If not, see <http://www.gnu.org/licenses/>.

use strict;
use File::Basename;

my $LIBEXECPATH="";

my $command = $ARGV[0];
my @opts;
my @files;

if (not defined $command or $command eq "help" or $command eq "--help")
{
    die "No command.\n" if ($LIBEXECPATH eq "");

    print basename($0);
    print ": LUNA output evaluation. The following commands are available:\n";
    my @list = <${LIBEXECPATH}/*>;
    foreach my $filename (@list)
    {
	print "\t".$1."\n" if ($filename =~ /^.*\/([^\/]+)$/);
    }
    print "Common options:\n";
    print "\t--out=NAME\tOutput file prefix\n";
    print "\t--format=FORMAT\tOutput file format, any format supported by ";
    print "Octave's\n\t\t\tprint function can be used.\n";
    print "\t--upper=VALUE\tUpper limit for the plot's x-axis\n";
    print "\t--kutime\tSet if the input files contain user space timing\n";
    print "\t\t\tinformation.\n";
    print "Some commands offer additional options.\n";
    exit(1);
}

for (my $i = 1; $i < @ARGV; $i++)
{
    my $arg = $ARGV[$i];
    # option with value
    if ($arg =~ /^--(\w*)=(.*)$/)
    {
	push(@opts, $1." ".$2);
	next;
    }
    # switch option
    if ($arg =~ /^--(\w*)$/)
    {
	push(@opts, $1);
	next;
    }
    # everything else should be a file
    if (-r $arg)
    {
	push(@files, $arg);
    }
    else
    {
	die "File not readable: ".$arg."\n";
    }
}

die "No input files.\n" if (@files == 0);

my $cli = "";
if ($LIBEXECPATH eq "")
{
    $cli = "./".$command.".m";
}
else
{
    $cli = $LIBEXECPATH."/".$command;
}

foreach my $i (@opts)
{
    $cli .= " ".$i;
}
$cli .= " --";
foreach my $i (@files)
{
    $cli .= " ".$i;
}

print $cli."\n";
exec ($cli) or die "No such command: ".$command."\n";
